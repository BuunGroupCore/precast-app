name: Test CLI Package

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/cli/**'
      - 'packages/shared/**'
      - '.github/workflows/cli-test.yml'
  pull_request:
    branches: [main]
    paths:
      - 'packages/cli/**'
      - 'packages/shared/**'
      - '.github/workflows/cli-test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        working-directory: packages/cli
        
      - name: Build CLI
        run: bun run build
        working-directory: packages/cli
        
      - name: Run type checking
        run: bun run typecheck
        working-directory: packages/cli
        
      - name: Run linting
        run: bun run lint
        working-directory: packages/cli
        
      - name: Generate smart test combinations
        run: bun smart-test-generator.ts
        working-directory: packages/cli
        
      - name: Run unit tests with Vitest
        run: bun test
        working-directory: packages/cli
        
      - name: Generate test report
        run: bun tests/test-reporter.ts
        working-directory: packages/cli
        
      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-report-node-${{ matrix.node-version }}
          path: |
            packages/cli/test-report.json
            packages/cli/test-report.md
          
      - name: Test CLI direct execution
        run: |
          # Test help command
          node dist/cli.js --help
          
          # Test version command
          node dist/cli.js --version
          
          # Test basic project creation
          node dist/cli.js init ci-test-basic --framework=react --backend=none --database=none --orm=none --styling=tailwind --runtime=node --no-git --yes
          
          # Verify project was created
          test -d ci-test-basic
          test -f ci-test-basic/package.json
          
          # Test monorepo project creation
          node dist/cli.js init ci-test-monorepo --framework=react --backend=express --database=postgres --orm=prisma --styling=tailwind --runtime=node --no-git --yes
          
          # Verify monorepo structure
          test -d ci-test-monorepo/apps
          test -d ci-test-monorepo/packages
          test -f ci-test-monorepo/turbo.json
          
          # Cleanup
          rm -rf ci-test-basic ci-test-monorepo
        working-directory: packages/cli