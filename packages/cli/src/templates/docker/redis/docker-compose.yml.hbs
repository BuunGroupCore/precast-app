name: {{name}}

services:
  redis:
    image: redis:7-alpine
    container_name: {{name}}-redis
    ports:
      - "6379:6379"
    volumes:
      - {{name}}_redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - {{name}}_network
    command: redis-server /usr/local/etc/redis/redis.conf

  # Optional: RedisInsight for database management
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: {{name}}-redis-insight
    ports:
      - "8001:8001"
    volumes:
      - {{name}}_redis_insight_data:/db
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - {{name}}_network

  # Optional: Redis Stack (includes RedisJSON, RediSearch, RedisGraph, RedisTimeSeries, RedisBloom)
  redis-stack:
    image: redis/redis-stack:latest
    container_name: {{name}}-redis-stack
    ports:
      - "6380:6379"
      - "8002:8001"
    volumes:
      - {{name}}_redis_stack_data:/data
    environment:
      - REDIS_ARGS=--requirepass password
    restart: unless-stopped
    networks:
      - {{name}}_network
    profiles:
      - stack

volumes:
  {{name}}_redis_data:
    driver: local
  {{name}}_redis_insight_data:
    driver: local
  {{name}}_redis_stack_data:
    driver: local

networks:
  {{name}}_network:
    driver: bridge