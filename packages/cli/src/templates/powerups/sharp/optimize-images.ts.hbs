import sharp from 'sharp';
import { readdirSync, statSync } from 'fs';
import { join } from 'path';

const inputDir = 'public/images';
const outputDir = 'public/optimized';

async function optimizeImages() {
  const files = readdirSync(inputDir);
  
  for (const file of files) {
    const inputPath = join(inputDir, file);
    const stat = statSync(inputPath);
    
    if (stat.isFile() && /\.(jpg|jpeg|png|webp)$/i.test(file)) {
      const outputPath = join(outputDir, file.replace(/\.(jpg|jpeg|png)$/i, '.webp'));
      
      await sharp(inputPath)
        .webp({ quality: 80 })
        .toFile(outputPath);
        
      console.log(`Optimized: ${file} -> ${outputPath}`);
    }
  }
}

optimizeImages().catch(console.error);