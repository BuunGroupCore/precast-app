import { initializeApp } from 'firebase/app'
import { getFirestore } from 'firebase/firestore'
import { getAuth } from 'firebase/auth'
import { getStorage } from 'firebase/storage'

/**
 * Firebase configuration
 */
const firebaseConfig = {
  apiKey: process.env.FIREBASE_API_KEY,
  authDomain: process.env.FIREBASE_AUTH_DOMAIN,
  projectId: process.env.FIREBASE_PROJECT_ID,
  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.FIREBASE_APP_ID,
}

// Validate required environment variables
const requiredEnvVars = [
  'FIREBASE_API_KEY',
  'FIREBASE_AUTH_DOMAIN',
  'FIREBASE_PROJECT_ID',
  'FIREBASE_STORAGE_BUCKET',
  'FIREBASE_MESSAGING_SENDER_ID',
  'FIREBASE_APP_ID',
]

for (const envVar of requiredEnvVars) {
  if (!process.env[envVar]) {
    throw new Error(`Missing required Firebase environment variable: ${envVar}`)
  }
}

/**
 * Initialize Firebase App
 */
export const app = initializeApp(firebaseConfig)

/**
 * Firebase services
 */
export const db = getFirestore(app)
export const auth = getAuth(app)
export const storage = getStorage(app)

{{#if typescript}}
/**
 * Firebase collections interface
 * @description Update these types to match your Firestore collections
 */
export interface Collections {
  users: {
    id: string
    email: string
    displayName?: string
    photoURL?: string
    createdAt: Date
    updatedAt: Date
  }
}

/**
 * Type-safe collection names
 */
export const COLLECTIONS = {
  USERS: 'users',
} as const

export type CollectionName = keyof Collections
{{/if}}