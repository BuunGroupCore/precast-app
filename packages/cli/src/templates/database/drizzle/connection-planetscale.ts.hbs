import { drizzle } from "drizzle-orm/planetscale-serverless";
import { Client } from "@planetscale/database";
import * as schema from "./schema{{#if typescript}}.js{{/if}}";

if (!process.env.DATABASE_URL) {
  throw new Error("DATABASE_URL environment variable is required");
}

/**
 * PlanetScale serverless connection
 * @description Direct HTTP connection to PlanetScale serverless MySQL
 */
const client = new Client({
  url: process.env.DATABASE_URL,
});

/**
 * Drizzle database instance
 * @description Pre-configured Drizzle client for PlanetScale serverless MySQL
 */
export const db = drizzle(client, { schema });

/**
 * Database health check
 * @description Verifies database connection is working
 */
export async function checkDatabaseConnection(): Promise<boolean> {
  try {
    const result = await client.execute("SELECT 1");
    return result.rows.length > 0;
  } catch (error) {
    console.error("PlanetScale database connection failed:", error);
    return false;
  }
}

/**
 * Connection info
 * @description Display connection information for debugging
 */
export async function getDatabaseInfo() {
  try {
    const result = await client.execute("SELECT @@version as version, DATABASE() as database_name");
    const row = result.rows[0];
    return {
      type: "planetscale-mysql",
      version: row?.version,
      database: row?.database_name,
      status: "connected"
    };
  } catch (error) {
    return {
      type: "planetscale-mysql",
      status: "error",
      error: error instanceof Error ? error.message : "Unknown error"
    };
  }
}