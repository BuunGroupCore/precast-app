{{#if (and (includes powerups "ngrok") (or (eq deploymentMethod "github-pages") (and (or (eq deploymentMethod "cloudflare-pages") (eq deploymentMethod "netlify")) (eq backend "none") (eq database "none"))))}}# Ngrok Limitations with Static Deployments

## ⚠️ Important Notice

This project is configured for **{{deploymentMethod}}** static deployment, which has limitations when using ngrok tunneling:

### Limitations

1. **No Middleware Support**: Static Next.js exports don't support middleware.ts files
2. **No Server-Side Logic**: API routes and server-side functionality are not available
3. **Limited Ngrok Integration**: Advanced host validation and CORS handling is limited

### Ngrok Configuration

For development with ngrok tunnels:

1. **Use the dev script**: `npm run dev` (already configured with `--hostname 0.0.0.0`)
2. **Manual host configuration**: You may need to manually configure your browser or development environment to trust ngrok hosts
3. **Consider deployment alternatives**: For full ngrok support, consider using:
   - Vercel (supports middleware and server functions)
   - Netlify Functions (for API functionality)
   - Self-hosted deployments with Docker

### Development Workflow

```bash
# Start the dev server (accepts external connections)
npm run dev

# Your app will be available at:
# - http://localhost:3000 (local)
# - https://your-ngrok-url.ngrok-free.app (tunnel)
```

### Production Deployment

The static build will work normally for {{deploymentMethod}}, but ngrok-specific features are development-only.

---

**Note**: This file is generated when both ngrok and static deployment methods are configured.
{{/if}}