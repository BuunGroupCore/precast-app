/**
 * Database Schema
 * @module schema
 * @description Drizzle ORM schema definitions for the application
 */

{{#if (eq database "postgres")}}
import { pgTable, text, timestamp, uuid } from 'drizzle-orm/pg-core'
{{else if (eq database "mysql")}}
import { mysqlTable, text, timestamp, varchar } from 'drizzle-orm/mysql-core'
{{/if}}

/**
 * User table schema
 * @description Defines the structure for the users table
 */
{{#if (eq database "postgres")}}
export const users = pgTable('users', {
  id: uuid('id').primaryKey().defaultRandom(),
  email: text('email').notNull().unique(),
  name: text('name'),{{#if authProvider}}
  password: text('password'),{{/if}}
  createdAt: timestamp('created_at').defaultNow().notNull(),
  updatedAt: timestamp('updated_at').defaultNow().notNull(),
})
{{else if (eq database "mysql")}}
export const users = mysqlTable('users', {
  id: varchar('id', { length: 36 }).primaryKey(),
  email: varchar('email', { length: 255 }).notNull().unique(),
  name: varchar('name', { length: 255 }),{{#if authProvider}}
  password: varchar('password', { length: 255 }),{{/if}}
  createdAt: timestamp('created_at').defaultNow().notNull(),
  updatedAt: timestamp('updated_at').defaultNow().onUpdateNow().notNull(),
})
{{/if}}

{{#if typescript}}
/**
 * TypeScript types inferred from schema
 */
export type User = typeof users.$inferSelect
export type NewUser = typeof users.$inferInsert
{{/if}}