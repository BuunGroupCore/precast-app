import js from '@eslint/js';
{{#if typescript}}import typescript from '@typescript-eslint/eslint-plugin';
import tsParser from '@typescript-eslint/parser';{{/if}}
{{#ifEquals framework "react"}}import react from 'eslint-plugin-react';
import reactHooks from 'eslint-plugin-react-hooks';
import reactRefresh from 'eslint-plugin-react-refresh';{{/ifEquals}}
{{#ifEquals framework "vue"}}import vue from 'eslint-plugin-vue';
import vueParser from 'vue-eslint-parser';{{/ifEquals}}

export default [
  {
    ignores: ['dist/**', 'build/**', 'node_modules/**', '.next/**', '.nuxt/**', 'coverage/**'],
  },
  js.configs.recommended,
  {{#if typescript}}
  {
    files: ['**/*.ts', '**/*.tsx'],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
        {{#ifEquals framework "react"}}ecmaFeatures: {
          jsx: true,
        },{{/ifEquals}}
      },
      globals: {
        browser: true,
        node: true,
        es2021: true,
      },
    },
    plugins: {
      '@typescript-eslint': typescript,
    },
    rules: {
      ...typescript.configs.recommended.rules,
      '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
      '@typescript-eslint/no-explicit-any': 'warn',
    },
  },
  {{/if}}
  {{#ifEquals framework "react"}}
  {
    files: ['**/*.jsx', '**/*.tsx'],
    plugins: {
      react,
      'react-hooks': reactHooks,
      'react-refresh': reactRefresh,
    },
    settings: {
      react: {
        version: 'detect',
      },
    },
    rules: {
      ...react.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      'react/react-in-jsx-scope': 'off',
      'react/prop-types': 'off',
      'react-refresh/only-export-components': ['warn', { allowConstantExport: true }],
    },
  },
  {{/ifEquals}}
  {{#ifEquals framework "vue"}}
  {
    files: ['**/*.vue'],
    languageOptions: {
      parser: vueParser,
      parserOptions: {
        parser: {{#if typescript}}tsParser{{else}}'espree'{{/if}},
        ecmaVersion: 'latest',
        sourceType: 'module',
      },
    },
    plugins: {
      vue,
    },
    rules: {
      ...vue.configs['vue3-recommended'].rules,
      'vue/multi-word-component-names': 'off',
    },
  },
  {{/ifEquals}}
  {
    rules: {
      'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
      'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
    },
  },
];