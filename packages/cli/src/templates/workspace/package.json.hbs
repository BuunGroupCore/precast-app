{
  "name": "{{name}}",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    {{#if docker}}
    {{#if (not (eq database "none"))}}
    "docker:up": "docker compose -f docker/{{database}}/docker-compose.yml up -d",
    "docker:down": "docker compose -f docker/{{database}}/docker-compose.yml down",
    "docker:logs": "docker compose -f docker/{{database}}/docker-compose.yml logs -f",
    "docker:reset": "docker compose -f docker/{{database}}/docker-compose.yml down -v && docker compose -f docker/{{database}}/docker-compose.yml up -d",
    "docker:ps": "docker compose -f docker/{{database}}/docker-compose.yml ps",
    {{else}}
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:reset": "docker compose down -v && docker compose up -d",
    "docker:ps": "docker compose ps",
    {{/if}}
    {{/if}}
    {{#if (and orm (eq orm "prisma"))}}
    {{#if (ne generate false)}}"postinstall": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma generate || echo 'Prisma generate will run on first dev'",{{/if}}
    "predev": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma generate && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma db push --skip-generate",
    "prebuild": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma generate",
    "db:generate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma generate",
    "db:push": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma db push",
    "db:migrate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma migrate dev",
    "db:studio": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} prisma studio",
    {{/if}}
    {{#if (and orm (eq orm "drizzle") database (ne database "none"))}}
    "predev": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit push --force",
    "prebuild": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit generate",
    "db:push": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit push --force",
    "db:generate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit generate",
    "db:migrate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit migrate",
    "db:studio": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} drizzle-kit studio",
    {{/if}}
    {{#if (and orm (eq orm "typeorm"))}}
    "predev": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} typeorm schema:sync -d src/data-source.ts",
    "db:migrate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} typeorm migration:run -d src/data-source.ts",
    "db:generate": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} typeorm migration:generate -d src/data-source.ts",
    "db:revert": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} typeorm migration:revert -d src/data-source.ts",
    "db:sync": "cd apps/api && {{#if (eq packageManager "bun")}}bunx{{else if (eq packageManager "pnpm")}}pnpm dlx{{else if (eq packageManager "yarn")}}yarn dlx{{else}}npx{{/if}} typeorm schema:sync -d src/data-source.ts",
    {{/if}}
    {{#if (and docker database (ne database "none"))}}
    "setup": "{{packageManager}} install && echo '[DOCKER] Start Docker services with: npx create-precast-app deploy' && echo '[INFO] Then run: {{packageManager}} run dev'",
    "dev:docker": "npx create-precast-app deploy && sleep 3 && turbo run dev",
    {{/if}}
    "dev": "turbo run dev",
    "build": "turbo run build",
    "start": "turbo run start",
    "lint": "turbo run lint",
    "type-check": "turbo run type-check",
    "clean": "turbo run clean",
    "format": "prettier --write .",
    "format:check": "prettier --check ."
  },
  "devDependencies": {
    "turbo": "^2.5.5",
    {{#if typescript}}"typescript": "^5.4.2",{{/if}}
    "eslint": "^8.57.0"
  },
  "packageManager": "{{packageManager}}@{{packageManagerVersion}}"
}