name: Deploy to Cloudflare Pages

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

jobs:
  deploy:
    name: Deploy Website to Cloudflare Pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.1

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build TypeScript Projects
        run: npx tsc --build tsconfig.build.json

      - name: Build Website
        run: pnpm --filter website build
        env:
          VITE_PUBLIC_POSTHOG_KEY: ${{ secrets.POSTHOG_API_KEY }}
          VITE_PUBLIC_POSTHOG_HOST: ${{ secrets.POSTHOG_HOST }}
          VITE_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: precast-website
          directory: packages/website/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Update PostHog with deployment
        run: |
          curl -X POST ${{ secrets.POSTHOG_HOST }}/capture/ \
            -H 'Content-Type: application/json' \
            -d '{
              "api_key": "${{ secrets.POSTHOG_API_KEY }}",
              "event": "website_deployed",
              "properties": {
                "environment": "${{ inputs.environment }}",
                "commit": "${{ github.sha }}",
                "deployment_platform": "cloudflare_pages",
                "triggered_by": "manual"
              },
              "distinct_id": "github-actions"
            }'

      - name: Deployment Success
        run: |
          echo "ðŸš€ Successfully deployed to Cloudflare Pages!"
          echo "Environment: ${{ inputs.environment }}"
          echo "Commit: ${{ github.sha }}"