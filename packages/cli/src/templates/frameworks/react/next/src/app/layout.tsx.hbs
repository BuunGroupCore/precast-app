import type { Metadata } from 'next'
import { Geist, Geist_Mono } from 'next/font/google'
import { Layout } from '@/components/layout'
{{#if (eq styling "scss")}}
import '@/styles/globals.scss'
{{else}}
import '@/styles/globals.css'
{{/if}}
{{#if (or plugins.length (and database (ne database "none")) (and authProvider (ne authProvider "none")))}}
import { PrecastWidget } from '@/components/precast/PrecastWidget'
{{/if}}
{{#if authProvider}}
import { AuthProvider } from '@/components/auth/AuthProvider'
{{/if}}

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: '{{name}}',
  description: 'Generated by create-precast-app',
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en" className={`${geistSans.variable} ${geistMono.variable}`}>
      <body className="{{#if (eq styling "tailwind")}}font-sans{{else}}font-family: var(--font-sans){{/if}}">
{{#if authProvider}}
        <AuthProvider>
          <Layout>
            {children}
          </Layout>
          {{#if (or plugins.length (and database (ne database "none")) (and authProvider (ne authProvider "none")))}}
          <PrecastWidget />
          {{/if}}
        </AuthProvider>
{{else}}
        <Layout>
          {children}
        </Layout>
        {{#if (or plugins.length (and database (ne database "none")) (and authProvider (ne authProvider "none")))}}
        <PrecastWidget />
        {{/if}}
{{/if}}
      </body>
    </html>
  )
}