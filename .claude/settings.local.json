{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "WebFetch(domain:github.com)",
      "Bash(mkdir:*)",
      "Bash(bun install:*)",
      "WebFetch(domain:better-t-stack.dev)",
      "Bash(bun add:*)",
      "Bash(touch:*)",
      "Bash(bash:*)",
      "Bash(rm:*)",
      "Bash(bun run:*)",
      "Bash(cp:*)",
      "Bash(bunx tsup:*)",
      "Bash(ls:*)",
      "Bash(node:*)",
      "Bash(timeout:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(mv:*)",
      "Bash(bun test:*)",
      "Bash(pkill:*)",
      "Bash(cat:*)",
      "Bash(pnpm add:*)",
      "Bash(bunx prettier:*)",
      "Bash(true)",
      "Bash(npx tsup:*)",
      "Bash(npx tsc:*)",
      "Bash(for file in src/generators/{vanilla,vue,vite,solid,next,astro,remix,nuxt,angular,svelte}-template.ts)",
      "Bash(do sed -i 's|path.join(__dirname, \"\"templates\"\")|path.join(__dirname, \"\"..\"\", \"\"templates\"\")|g' \"$file\")",
      "Bash(done)",
      "Bash(sed:*)",
      "Bash(grep:*)",
      "Bash(for framework in angular astro next nuxt react remix solid svelte vanilla vite vue)",
      "Bash(do echo \"=== $framework ===\")",
      "Bash(curl:*)",
      "Bash(chmod:*)",
      "mcp__brave-search__brave_web_search",
      "WebFetch(domain:tailwindcss.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:codeparrot.ai)",
      "Bash(git checkout:*)",
      "WebFetch(domain:authjs.dev)",
      "WebFetch(domain:www.better-auth.com)",
      "WebFetch(domain:betterstack.com)",
      "Bash(/home/sacha/repositories/precast-app/packages/cli/dist/cli.js banner)",
      "Bash(/home/sacha/repositories/precast-app/packages/cli/dist/cli.js init test-project --yes --framework react --backend none --database none --orm none --styling tailwind --runtime node)",
      "Bash(/home/sacha/repositories/precast-app/packages/cli/dist/cli.js init test-claude --yes --framework react --backend none --database none --orm none --styling tailwind --runtime node)",
      "WebFetch(domain:ui.shadcn.com)",
      "Bash(bunx eslint:*)",
      "Bash(packages/cli/dist/cli.js init test-vite-shadcn --framework vite --styling tailwind --ui-library shadcn --typescript --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-vite-shadcn --framework vite --styling tailwind --ui-library shadcn --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-vite-shadcn --framework vite --styling tailwind --ui-library shadcn --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-vite-shadcn-v2 --framework vite --styling tailwind --ui-library shadcn --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-react-shadcn --framework react --styling tailwind --ui-library shadcn --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-react-complete --framework react --styling tailwind --ui-library shadcn --auth better-auth --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-react-auth --framework react --styling tailwind --auth better-auth --backend none --database postgres --orm prisma --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-next-shadcn --framework next --styling tailwind --ui-library shadcn --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-react-clean --framework react --styling tailwind --ui-library shadcn --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(./packages/cli/dist/cli.js init test-security --framework react --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(./dist/cli.js init:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(./packages/cli/dist/cli.js init test-vue --framework vue --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(./packages/cli/dist/cli.js init test-angular --framework angular --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(./packages/cli/dist/cli.js init test-remix --framework remix --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(./packages/cli/dist/cli.js init test-astro --framework astro --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-vue --framework vue --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-angular --framework angular --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-remix --framework remix --styling tailwind --backend none --database none --orm none --runtime node --install --yes)",
      "Bash(../dist/cli.js init:*)",
      "Bash(./dist/cli.js --help)",
      "Bash(bun:*)",
      "WebFetch(domain:storybook.js.org)",
      "WebFetch(domain:www.i18next.com)",
      "WebFetch(domain:vite-pwa-org.netlify.app)",
      "Bash(packages/cli/dist/cli.js init test-api-client --framework react --backend express --database postgres --orm prisma --api-client tanstack-query --styling tailwind --runtime node --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-api-fixed --framework react --backend express --database postgres --orm prisma --api-client tanstack-query --styling tailwind --runtime node --yes)",
      "Bash(./packages/cli/dist/cli.js init test-mcp-flag --framework react --backend none --database postgres --orm prisma --styling tailwind --runtime node --ai claude --mcp-servers postgresql,github,git,filesystem --install --yes)",
      "Bash(packages/cli/dist/cli.js init test-mcp-flag --framework react --backend none --database postgres --orm prisma --styling tailwind --runtime node --ai claude --mcp-servers postgresql,github,git,filesystem --install --yes)",
      "Bash(./packages/cli/dist/cli.js --help)",
      "WebFetch(domain:www.npmjs.com)",
      "WebFetch(domain:dev.to)",
      "Bash(bunx tsc:*)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:gist.github.com)",
      "Bash(# Fix formatting and create all index files\necho \"\"\"\" >> /home/sacha/repositories/precast-app/packages/website/src/pages/metrics/index.ts\n\n# Create index files for all pages\necho ''export { OriginStoryPage } from \"\"./page\"\";'' > src/pages/origin-story/index.ts\necho \"\"\"\" >> src/pages/origin-story/index.ts\n\necho ''export { ShowcasePage } from \"\"./page\"\";'' > src/pages/showcase/index.ts  \necho \"\"\"\" >> src/pages/showcase/index.ts\n\necho ''export { SubmitProjectPage } from \"\"./page\"\";'' > src/pages/submit-project/index.ts\necho \"\"\"\" >> src/pages/submit-project/index.ts\n\necho ''export { SupportPage } from \"\"./page\"\";'' > src/pages/support/index.ts\necho \"\"\"\" >> src/pages/support/index.ts\n\necho ''export { NotFoundPage } from \"\"./page\"\";'' > src/pages/not-found/index.ts\necho \"\"\"\" >> src/pages/not-found/index.ts)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:www.dicebear.com)",
      "Bash(CI=true bun test tests/cli.test.ts -t \"should generate react-express-postgres\")",
      "Bash(env CI=true bun test tests/cli.test.ts -t \"should generate react-express-postgres\")",
      "Bash(npx eslint:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm --filter website format)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm --filter website lint --fix)",
      "Bash(pnpm:*)",
      "Bash(npm run build:*)",
      "Bash(npm run audit:fix:*)",
      "Bash(for file in /home/sacha/repositories/precast-app/packages/cli/src/generators/*-template.ts)",
      "Bash(do if ! grep -q \"generateBaseTemplate\" \"$file\")",
      "Bash(then basename \"$file\")",
      "Bash(fi)",
      "Bash(npx prettier:*)",
      "Bash(docker logs:*)",
      "Bash(npm run docker:down:*)",
      "Bash(npm run docker:up:*)",
      "Bash(git push:*)",
      "WebFetch(domain:hono.dev)",
      "WebFetch(domain:vite.dev)",
      "Bash(/home/sacha/repositories/precast-app/packages/cli/dist/cli.js init test-vue-counter-fixed --framework vite --ui-framework vue --backend none --database none --orm none --styling css --runtime node --install --yes)"
    ],
    "deny": []
  }
}