{
  "id": "email",
  "name": "Email & Notifications",
  "version": "1.0.0",
  "description": "Email templates, transactional emails with Resend/SendGrid, and notification system",
  "category": "communication",
  "tags": ["email", "notifications", "resend", "sendgrid", "templates"],
  "status": "experimental",
  "author": "Precast Team",
  "license": "MIT",
  "compatibility": {
    "frameworks": ["react", "next", "vue", "nuxt"],
    "backends": ["express", "next", "hono", "fastify"],
    "styling": ["tailwind", "css"],
    "typescript": true
  },
  "dependencies": {
    "required": {
      "resend": "^2.1.0"
    },
    "optional": {
      "@sendgrid/mail": "^7.7.0",
      "nodemailer": "^6.9.7",
      "react-email": "^1.9.5"
    }
  },
  "detection": {
    "requiredFiles": ["package.json"],
    "frameworkDetection": {
      "react": ["src/App.tsx", "src/App.jsx"],
      "next": ["next.config.js", "app/layout.tsx"],
      "vue": ["src/App.vue", "src/main.ts"],
      "nuxt": ["nuxt.config.ts", "nuxt.config.js"]
    },
    "backendDetection": {
      "express": ["src/server.ts", "src/app.ts"],
      "next": ["pages/api", "app/api"],
      "hono": ["src/index.ts", "src/app.ts"],
      "fastify": ["src/server.ts", "src/app.ts"]
    }
  },
  "installation": {
    "preInstall": [
      {
        "command": "detectProject",
        "description": "Detect project framework and backend"
      },
      {
        "command": "validateCompatibility",
        "description": "Validate email service compatibility"
      }
    ],
    "postInstall": [
      {
        "command": "copyFiles",
        "description": "Copy email templates and API routes"
      },
      {
        "command": "updateImports",
        "description": "Update app imports"
      },
      {
        "command": "createExample",
        "description": "Create email preview page",
        "optional": true,
        "file": "src/pages/email-preview.tsx"
      }
    ]
  },
  "usage": {
    "quickStart": [
      "Set RESEND_API_KEY or SENDGRID_API_KEY in .env",
      "Use sendEmail utility for transactional emails",
      "Customize email templates in src/features/email/templates",
      "Test emails using the preview page"
    ],
    "examples": [
      {
        "title": "Welcome Email",
        "code": "import { sendEmail, WelcomeTemplate } from '@/features/email';\n\nawait sendEmail({\n  to: user.email,\n  subject: 'Welcome to our app!',\n  template: WelcomeTemplate,\n  props: { userName: user.name }\n});"
      },
      {
        "title": "Password Reset",
        "code": "import { sendPasswordReset } from '@/features/email';\n\nawait sendPasswordReset({\n  email: user.email,\n  resetToken: token,\n  expiresIn: '1 hour'\n});"
      }
    ]
  }
}
