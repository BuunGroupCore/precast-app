import sharp from 'sharp';

export interface ImageOptions {
  width?: number;
  height?: number;
  quality?: number;
  format?: 'webp' | 'jpeg' | 'png';
}

export async function processImage(
  inputPath: string, 
  outputPath: string, 
  options: ImageOptions = {}
): Promise<void> {
  const { width, height, quality = 80, format = 'webp' } = options;
  
  let transformer = sharp(inputPath);
  
  if (width || height) {
    transformer = transformer.resize(width, height, {
      fit: 'cover',
      position: 'center'
    });
  }
  
  switch (format) {
    case 'webp':
      transformer = transformer.webp({ quality });
      break;
    case 'jpeg':
      transformer = transformer.jpeg({ quality });
      break;
    case 'png':
      transformer = transformer.png({ quality });
      break;
  }
  
  await transformer.toFile(outputPath);
}