{
  "permissions": {
    "allow": [
      {{#each allowedTools}}
      "{{this}}"{{#unless @last}},{{/unless}}
      {{/each}}
    ]
  }{{#if hasMcpServers}},
  "mcpServers": {
    {{#each mcpServers}}
    {{#if (eq this "filesystem")}}
    "filesystem": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-filesystem", "/home/user/projects"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "memory")}}
    "memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "github")}}
    "github": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "gitlab")}}
    "gitlab": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-gitlab"],
      "env": {
        "GITLAB_PERSONAL_ACCESS_TOKEN": "${GITLAB_PERSONAL_ACCESS_TOKEN}",
        "GITLAB_API_URL": "${GITLAB_API_URL}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "postgresql")}}
    "postgresql": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-postgres", "${DATABASE_URL}"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "sqlite")}}
    "sqlite": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sqlite", "path/to/your/database.db"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "google-drive")}}
    "google-drive": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-google-drive"],
      "env": {
        "GOOGLE_DRIVE_CLIENT_ID": "${GOOGLE_DRIVE_CLIENT_ID}",
        "GOOGLE_DRIVE_CLIENT_SECRET": "${GOOGLE_DRIVE_CLIENT_SECRET}",
        "GOOGLE_DRIVE_REDIRECT_URI": "http://localhost:3000/oauth/callback"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "slack")}}
    "slack": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-slack"],
      "env": {
        "SLACK_BOT_TOKEN": "${SLACK_BOT_TOKEN}",
        "SLACK_TEAM_ID": "${SLACK_TEAM_ID}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "puppeteer")}}
    "puppeteer": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-puppeteer"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "browser")}}
    "browser": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-browser"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "aws")}}
    "aws": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-aws"],
      "env": {
        "AWS_ACCESS_KEY_ID": "${AWS_ACCESS_KEY_ID}",
        "AWS_SECRET_ACCESS_KEY": "${AWS_SECRET_ACCESS_KEY}",
        "AWS_REGION": "${AWS_REGION}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "gcp")}}
    "gcp": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-gcp"],
      "env": {
        "GOOGLE_APPLICATION_CREDENTIALS": "${GOOGLE_APPLICATION_CREDENTIALS}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "azure")}}
    "azure": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-azure"],
      "env": {
        "AZURE_SUBSCRIPTION_ID": "${AZURE_SUBSCRIPTION_ID}",
        "AZURE_CLIENT_ID": "${AZURE_CLIENT_ID}",
        "AZURE_CLIENT_SECRET": "${AZURE_CLIENT_SECRET}",
        "AZURE_TENANT_ID": "${AZURE_TENANT_ID}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "cloudflare")}}
    "cloudflare": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-cloudflare"],
      "env": {
        "CLOUDFLARE_API_TOKEN": "${CLOUDFLARE_API_TOKEN}",
        "CLOUDFLARE_ACCOUNT_ID": "${CLOUDFLARE_ACCOUNT_ID}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "mongodb")}}
    "mongodb": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-mongodb"],
      "env": {
        "MONGODB_URI": "${MONGODB_URI}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "supabase")}}
    "supabase": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-supabase"],
      "env": {
        "SUPABASE_URL": "${SUPABASE_URL}",
        "SUPABASE_SERVICE_ROLE_KEY": "${SUPABASE_SERVICE_ROLE_KEY}"
      }
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "fetch")}}
    "fetch": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-fetch"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "sequential-thinking")}}
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{#if (eq this "everything")}}
    "everything": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-everything"]
    }{{#unless @last}},{{/unless}}
    {{/if}}
    {{/each}}
  }{{/if}}
}