{{#if (eq framework "next")}}'use client';

{{/if}}/**
 * Authentication Example Component
 * @module AuthExample
 * @description Complete authentication example with user profile display and modal interactions
 */

import React, { useState } from 'react';
import { LogOut, User, Settings, Shield } from 'lucide-react';
import { useAuth } from '@/components/auth/AuthProvider';
import { AuthModal } from './AuthModal';
import { AuthButton } from './AuthButton';

/**
 * Main authentication example component with login/signup flows
 * @returns {JSX.Element} Authentication example component
 */
export function AuthExample() {
  const { user, isLoading, error, isAuthenticated, signIn, signUp, signOut } = useAuth();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [modalMode, setModalMode] = useState<'login' | 'signup'>('login');

  const handleOpenLogin = () => {
    setModalMode('login');
    setIsModalOpen(true);
  };

  const handleOpenSignup = () => {
    setModalMode('signup');
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  const handleModeChange = (mode: 'login' | 'signup') => {
    setModalMode(mode);
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-600 dark:text-gray-400">Loading...</p>
        </div>
      </div>
    );
  }

  if (isAuthenticated && user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-green-50 to-emerald-100 dark:from-gray-900 dark:to-gray-800">
        <div className="container mx-auto px-4 py-8">
          <div className="max-w-md mx-auto">
            {/* User Profile Card */}
            <div className="bg-white dark:bg-gray-900 rounded-2xl shadow-xl p-8 border border-gray-100 dark:border-gray-800">
              <div className="text-center mb-6">
                <div className="w-20 h-20 bg-gradient-to-r from-blue-600 to-blue-700 rounded-full flex items-center justify-center mx-auto mb-4">
                  <User className="h-10 w-10 text-white" />
                </div>
                <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                  Welcome back!
                </h1>
                <p className="text-gray-600 dark:text-gray-400">
                  You're successfully signed in
                </p>
              </div>

              <div className="space-y-4 mb-6">
                <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg">
                  <User className="h-5 w-5 text-gray-400" />
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Name</p>
                    <p className="font-medium text-gray-900 dark:text-white">
                      {user.name || 'Not provided'}
                    </p>
                  </div>
                </div>

                <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg">
                  <Shield className="h-5 w-5 text-gray-400" />
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Email</p>
                    <p className="font-medium text-gray-900 dark:text-white">
                      {user.email}
                    </p>
                  </div>
                </div>

                <div className="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-800 rounded-lg">
                  <Settings className="h-5 w-5 text-gray-400" />
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">User ID</p>
                    <p className="font-mono text-sm text-gray-600 dark:text-gray-300">
                      {user.id}
                    </p>
                  </div>
                </div>
              </div>

              <AuthButton
                onClick={signOut}
                variant="secondary"
                className="w-full"
              >
                <LogOut className="h-5 w-5 mr-2" />
                Sign out
              </AuthButton>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
      <div className="container mx-auto px-4 py-8">
        <div className="max-w-md mx-auto">
          {/* Welcome Card */}
          <div className="bg-white dark:bg-gray-900 rounded-2xl shadow-xl p-8 border border-gray-100 dark:border-gray-800 text-center">
            <div className="w-20 h-20 bg-gradient-to-r from-blue-600 to-blue-700 rounded-full flex items-center justify-center mx-auto mb-6">
              <Shield className="h-10 w-10 text-white" />
            </div>

            <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-4">
              Welcome to {{projectName}}
            </h1>
            <p className="text-gray-600 dark:text-gray-400 mb-8">
              Beautiful, modern authentication components built with React and Framer Motion
            </p>

            {error && (
              <div className="mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
                <p className="text-sm text-red-600 dark:text-red-400">{error instanceof Error ? error.message : String(error)}</p>
              </div>
            )}

            <div className="space-y-4">
              <AuthButton
                onClick={handleOpenLogin}
                className="w-full"
              >
                Sign In
              </AuthButton>

              <AuthButton
                onClick={handleOpenSignup}
                variant="outline"
                className="w-full"
              >
                Create Account
              </AuthButton>
            </div>

            <div className="mt-8 pt-6 border-t border-gray-200 dark:border-gray-700">
              <p className="text-sm text-gray-500 dark:text-gray-400">
                Demo auth components with beautiful animations
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* Auth Modal */}
      <AuthModal
        isOpen={isModalOpen}
        onClose={handleCloseModal}
        mode={modalMode}
        onModeChange={handleModeChange}
        onLogin={signIn}
        onSignup={signUp}
        isLoading={isLoading}
        error={error instanceof Error ? error.message : error}
        showSocialLogin={ {{#if (eq authProvider "auth.js")}}true{{else}}false{{/if}} }
      />
    </div>
  );
}