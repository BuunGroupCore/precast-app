name: {{name}}

# Turso local development using libSQL server
# This provides a local SQLite-compatible server that mimics Turso's behavior
services:
  # LibSQL Server (Turso-compatible SQLite server)
  turso-local:
    image: ghcr.io/tursodatabase/libsql-server:latest
    container_name: {{name}}-turso-local
    ports:
      - "8080:8080"  # HTTP API
      - "5001:5001"  # gRPC (optional)
    volumes:
      - {{name}}_turso_data:/var/lib/sqld
      - ./migrations:/migrations:ro
      - ./local.db:/var/lib/sqld/data.db
    environment:
      - SQLD_NODE_ID=primary
      - SQLD_DB_PATH=/var/lib/sqld/data.db
      - SQLD_HTTP_LISTEN_ADDR=0.0.0.0:8080
      - SQLD_GRPC_LISTEN_ADDR=0.0.0.0:5001
      - SQLD_LOG_LEVEL=info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - {{name}}_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # SQLite Web UI for database management
  sqlite-web:
    image: coleifer/sqlite-web:latest
    container_name: {{name}}-sqlite-web
    ports:
      - "8081:8080"
    volumes:
      - ./local.db:/data/db.sqlite3:ro
    environment:
      - SQLITE_DATABASE=/data/db.sqlite3
      - SQLITE_WEB_PASSWORD=admin
      - SQLITE_WEB_READ_ONLY=false
    depends_on:
      turso-local:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - {{name}}_network
    profiles:
      - admin
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Migration runner (runs once)
  migrate:
    image: keinos/sqlite3:latest
    container_name: {{name}}-migrate
    volumes:
      - ./local.db:/data/db.sqlite3
      - ./migrations:/migrations:ro
    command: |
      sh -c "
        echo 'Running migrations...'
        for file in /migrations/*.sql; do
          if [ -f \"$$file\" ]; then
            echo \"Applying $$file...\"
            sqlite3 /data/db.sqlite3 < $$file
          fi
        done
        echo 'Migrations complete!'
      "
    networks:
      - {{name}}_network
    profiles:
      - migrate

volumes:
  {{name}}_turso_data:
    driver: local

networks:
  {{name}}_network:
    driver: bridge