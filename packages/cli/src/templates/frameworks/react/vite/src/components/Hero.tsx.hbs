{{#if typescript}}import React from 'react';{{else}}import React from 'react';{{/if}}
{{#if (eq styling "styled-components")}}import styled from 'styled-components';{{/if}}
{{#if (eq styling "tailwind")}}import { PrecastBanner } from './PrecastBanner-tailwind';{{else}}import { PrecastBanner } from './PrecastBanner';
import './PrecastBanner.css';{{/if}}

{{#if typescript}}
/**
 * Hero section component that displays the main landing message
 * Features animated gradient text and call-to-action buttons
 * 
 * @component
 * @returns {JSX.Element} The hero section
 */
export const Hero: React.FC = () => {
{{else}}
/**
 * Hero section component
 */
export function Hero() {
{{/if}}
  const showPrecastBanner = true; // Set to false to use custom hero instead

  if (showPrecastBanner) {
    return <PrecastBanner />;
  }

  return (
    {{#if (eq styling "tailwind")}}
    <section id="hero" className="relative px-4 py-24 sm:px-6 sm:py-32 lg:px-8">
      <div className="max-w-7xl mx-auto">
        <div className="text-center">
          {/* Animated badge */}
          <div className="inline-flex items-center px-4 py-2 mb-8 text-sm font-medium rounded-full bg-purple-900/30 text-purple-300 border border-purple-800/50 backdrop-blur-sm">
            <span className="relative flex h-2 w-2 mr-2">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-purple-400 opacity-75"></span>
              <span className="relative inline-flex rounded-full h-2 w-2 bg-purple-500"></span>
            </span>
            Built with React + Vite + {{#if typescript}}TypeScript{{else}}JavaScript{{/if}}
          </div>
          
          {/* Main heading with gradient */}
          <h1 className="text-5xl sm:text-6xl md:text-7xl font-extrabold tracking-tight">
            <span className="block text-white mb-2">Welcome to</span>
            <span className="block bg-gradient-to-r from-purple-400 via-pink-400 to-purple-400 bg-clip-text text-transparent animate-gradient bg-300%">
              {{name}}
            </span>
          </h1>
          
          {/* Subtitle */}
          <p className="mt-6 max-w-2xl mx-auto text-xl text-gray-300">
            Experience the future of web development with our cutting-edge technology stack. 
            Fast, secure, and scalable applications at your fingertips.
          </p>
          
          {/* CTA Buttons */}
          <div className="mt-10 flex flex-col sm:flex-row gap-4 justify-center">
            <button className="group relative px-8 py-4 bg-gradient-to-r from-purple-600 to-pink-600 text-white font-semibold rounded-xl overflow-hidden transition-all hover:scale-105 shadow-xl">
              <span className="relative z-10">Get Started</span>
              <div className="absolute inset-0 bg-gradient-to-r from-purple-700 to-pink-700 opacity-0 group-hover:opacity-100 transition-opacity" />
            </button>
            
            <button className="px-8 py-4 bg-slate-800/50 backdrop-blur-sm text-white font-semibold rounded-xl border border-slate-700/50 hover:bg-slate-700/50 transition-all hover:scale-105">
              View Documentation
            </button>
          </div>
          
          {/* Tech stack icons */}
          <div className="mt-16 flex justify-center items-center gap-8 opacity-60">
            <div className="text-center">
              <div className="w-12 h-12 mx-auto mb-2">
                <svg viewBox="-10.5 -9.45 21 18.9" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="0" cy="0" r="2" fill="#61dafb"/>
                  <g stroke="#61dafb" strokeWidth="1" fill="none">
                    <ellipse rx="10" ry="4.5"/>
                    <ellipse rx="10" ry="4.5" transform="rotate(60)"/>
                    <ellipse rx="10" ry="4.5" transform="rotate(120)"/>
                  </g>
                </svg>
              </div>
              <span className="text-xs text-gray-400">React</span>
            </div>
            
            <div className="text-center">
              <div className="w-12 h-12 mx-auto mb-2">
                <svg viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M29.8836 6.146L16.7418 29.6457c-.2714.4851-.9684.488-1.2439.0052L2.0956 6.1482c-.3-.5262.1498-1.1635.746-1.057l13.156 2.3516a.7144.7144 0 00.2537-.0004l12.8808-2.3478c.5942-.1083 1.0463.5241.7515 1.0513z" fill="url(#vite-gradient)"/>
                  <defs>
                    <linearGradient id="vite-gradient" x1="1.7191" y1="4.9909" x2="18.0704" y2="37.1859" gradientUnits="userSpaceOnUse">
                      <stop stopColor="#41D1FF"/>
                      <stop offset="1" stopColor="#BD34FE"/>
                    </linearGradient>
                  </defs>
                </svg>
              </div>
              <span className="text-xs text-gray-400">Vite</span>
            </div>
            
            {{#if typescript}}
            <div className="text-center">
              <div className="w-12 h-12 mx-auto mb-2 flex items-center justify-center">
                <svg className="w-10 h-10" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <rect width="32" height="32" rx="2" fill="#3178C6"/>
                  <path d="M18.245 23.759v3.068a6.492 6.492 0 001.764.575 11.56 11.56 0 002.146.192 9.968 9.968 0 002.088-.211 5.11 5.11 0 001.735-.7 3.542 3.542 0 001.181-1.266 4.469 4.469 0 00.186-3.394 3.409 3.409 0 00-.717-1.117 5.236 5.236 0 00-1.123-.877 12.027 12.027 0 00-1.477-.734q-.6-.249-1.08-.484a5.5 5.5 0 01-.813-.479 2.089 2.089 0 01-.516-.518 1.091 1.091 0 01-.181-.618 1.039 1.039 0 01.162-.571 1.4 1.4 0 01.459-.429 2.439 2.439 0 01.726-.283 4.211 4.211 0 01.956-.1 5.942 5.942 0 01.808.058 6.292 6.292 0 01.856.177 5.994 5.994 0 01.836.3 4.657 4.657 0 01.751.422V13.9a7.509 7.509 0 00-1.525-.4 12.426 12.426 0 00-1.9-.129 8.767 8.767 0 00-2.064.235 5.239 5.239 0 00-1.716.733 3.655 3.655 0 00-1.171 1.271 3.731 3.731 0 00-.431 1.845 3.588 3.588 0 00.789 2.34 6 6 0 002.395 1.639q.63.26 1.175.509a6.458 6.458 0 01.942.517 2.463 2.463 0 01.626.585 1.2 1.2 0 01.23.719 1.1 1.1 0 01-.144.552 1.269 1.269 0 01-.435.441 2.381 2.381 0 01-.726.292 4.377 4.377 0 01-1.018.105 5.773 5.773 0 01-1.969-.35 5.874 5.874 0 01-1.805-1.045zm-5.154-7.638h4v-2.527H5.938v2.527H9.92v11.254h3.171z" fill="white"/>
                </svg>
              </div>
              <span className="text-xs text-gray-400">TypeScript</span>
            </div>
            {{/if}}
            
            {{#if (eq styling "tailwind")}}
            <div className="text-center">
              <div className="w-12 h-12 mx-auto mb-2 flex items-center justify-center">
                <svg className="w-10 h-10" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path fillRule="evenodd" clipRule="evenodd" d="M16 6.4c5.302 0 9.6 4.298 9.6 9.6s-4.298 9.6-9.6 9.6-9.6-4.298-9.6-9.6 4.298-9.6 9.6-9.6zM11.2 19.2l2.4-6.4 2.4 6.4h-1.6l-.4-1.2h-1.2l-.4 1.2h-1.2zm3.6-2.4l-.4-1.2-.4 1.2h.8z" fill="#06B6D4"/>
                </svg>
              </div>
              <span className="text-xs text-gray-400">Tailwind</span>
            </div>
            {{/if}}
          </div>
        </div>
      </div>
      
      {/* Animated particles background */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute -top-10 -right-10 w-72 h-72 bg-purple-700 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-blob"></div>
        <div className="absolute -bottom-10 -left-10 w-72 h-72 bg-pink-700 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-blob animation-delay-2000"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-72 h-72 bg-purple-700 rounded-full mix-blend-multiply filter blur-3xl opacity-20 animate-blob animation-delay-4000"></div>
      </div>
    </section>
    {{else if (eq styling "styled-components")}}
    <HeroSection id="hero">
      <HeroContainer>
        <Badge>
          <BadgeDot />
          Built with React + Vite + {{#if typescript}}TypeScript{{else}}JavaScript{{/if}}
        </Badge>
        
        <Title>
          <TitleTop>Welcome to</TitleTop>
          <TitleGradient>{{name}}</TitleGradient>
        </Title>
        
        <Subtitle>
          Experience the future of web development with our cutting-edge technology stack. 
          Fast, secure, and scalable applications at your fingertips.
        </Subtitle>
        
        <CTAButtons>
          <PrimaryButton>Get Started</PrimaryButton>
          <SecondaryButton>View Documentation</SecondaryButton>
        </CTAButtons>
      </HeroContainer>
    </HeroSection>
    {{else}}
    <section id="hero" className="hero-section">
      <div className="hero-container">
        <div className="hero-badge">
          <span className="badge-dot"></span>
          Built with React + Vite + {{#if typescript}}TypeScript{{else}}JavaScript{{/if}}
        </div>
        
        <h1 className="hero-title">
          <span className="title-top">Welcome to</span>
          <span className="title-gradient">{{name}}</span>
        </h1>
        
        <p className="hero-subtitle">
          Experience the future of web development with our cutting-edge technology stack. 
          Fast, secure, and scalable applications at your fingertips.
        </p>
        
        <div className="cta-buttons">
          <button className="btn-primary">Get Started</button>
          <button className="btn-secondary">View Documentation</button>
        </div>
      </div>
    </section>
    {{/if}}
  );
}{{#if typescript}};{{/if}}

{{#if (eq styling "styled-components")}}
const HeroSection = styled.section`
  position: relative;
  padding: 6rem 1rem;
  
  @media (min-width: 640px) {
    padding: 8rem 1.5rem;
  }
`;

const HeroContainer = styled.div`
  max-width: 1280px;
  margin: 0 auto;
  text-align: center;
`;

const Badge = styled.div`
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  margin-bottom: 2rem;
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: 9999px;
  background: rgba(147, 51, 234, 0.3);
  color: #d8b4fe;
  border: 1px solid rgba(147, 51, 234, 0.5);
  backdrop-filter: blur(4px);
`;

const BadgeDot = styled.span`
  position: relative;
  display: flex;
  height: 0.5rem;
  width: 0.5rem;
  margin-right: 0.5rem;
  
  &::before {
    content: '';
    position: absolute;
    inline-size: 100%;
    block-size: 100%;
    border-radius: 9999px;
    background: #a855f7;
    opacity: 0.75;
    animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
  }
  
  &::after {
    content: '';
    position: relative;
    display: inline-flex;
    border-radius: 9999px;
    height: 0.5rem;
    width: 0.5rem;
    background: #9333ea;
  }
  
  @keyframes ping {
    75%, 100% {
      transform: scale(2);
      opacity: 0;
    }
  }
`;

const Title = styled.h1`
  font-size: 3rem;
  font-weight: 800;
  letter-spacing: -0.025em;
  
  @media (min-width: 640px) {
    font-size: 4rem;
  }
  
  @media (min-width: 768px) {
    font-size: 5rem;
  }
`;

const TitleTop = styled.span`
  display: block;
  color: white;
  margin-bottom: 0.5rem;
`;

const TitleGradient = styled.span`
  display: block;
  background: linear-gradient(to right, #c084fc, #f472b6, #c084fc);
  background-size: 300% 100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradient 3s ease infinite;
  
  @keyframes gradient {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }
`;

const Subtitle = styled.p`
  margin-top: 1.5rem;
  max-width: 42rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.25rem;
  color: #d1d5db;
`;

const CTAButtons = styled.div`
  margin-top: 2.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  justify-content: center;
  
  @media (min-width: 640px) {
    flex-direction: row;
  }
`;

const PrimaryButton = styled.button`
  position: relative;
  padding: 1rem 2rem;
  background: linear-gradient(to right, #9333ea, #ec4899);
  color: white;
  font-weight: 600;
  border-radius: 0.75rem;
  overflow: hidden;
  transition: transform 0.2s;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
  
  &:hover {
    transform: scale(1.05);
  }
`;

const SecondaryButton = styled.button`
  padding: 1rem 2rem;
  background: rgba(30, 41, 59, 0.5);
  backdrop-filter: blur(4px);
  color: white;
  font-weight: 600;
  border-radius: 0.75rem;
  border: 1px solid rgba(51, 65, 85, 0.5);
  transition: all 0.2s;
  
  &:hover {
    background: rgba(51, 65, 85, 0.5);
    transform: scale(1.05);
  }
`;
{{/if}}